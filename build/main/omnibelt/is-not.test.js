var _a = require('ramda'), map = _a.map, apply = _a.apply;
var testHarnessUnary = require('../../test/utils').testHarnessUnary;
var isNot = require('./is-not');
var caseSections = [
    [Object, [
            ['', true],
            [{}, false]
        ]],
    [Array, [
            ['', true],
            [[], false]
        ]],
    [String, [
            [null, true],
            ['', false]
        ]],
    [Number, [
            ['', true],
            [1, false]
        ]],
    [Boolean, [
            ['', true],
            [true, false]
        ]],
    [Function, [
            ['', true],
            [function () { }, false]
        ]],
    [Symbol, [
            ['', true],
            [Symbol('foo'), false]
        ]],
    [Date, [
            ['', true],
            [new Date(), false]
        ]]
];
caseSections.forEach(function (section) {
    var typeCtor = section[0], cases = section[1];
    describe("is not " + typeCtor.name, function () {
        map(apply(testHarnessUnary(isNot(typeCtor))))(cases);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtbm90LnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvb21uaWJlbHQvaXMtbm90LnRlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQU0sSUFBQSxxQkFBaUMsRUFBL0IsWUFBRyxFQUFFLGdCQUFLLENBQXNCO0FBRWhDLElBQUEsK0RBQWdCLENBQWlDO0FBQ3pELElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUVsQyxJQUFNLFlBQVksR0FBRztJQUNuQixDQUFDLE1BQU0sRUFBRTtZQUNQLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQztZQUNWLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQztTQUNaLENBQUM7SUFDRixDQUFDLEtBQUssRUFBRTtZQUNOLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQztZQUNWLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQztTQUNaLENBQUM7SUFDRixDQUFDLE1BQU0sRUFBRTtZQUNQLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQztZQUNaLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQztTQUNaLENBQUM7SUFDRixDQUFDLE1BQU0sRUFBRTtZQUNQLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQztZQUNWLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQztTQUNYLENBQUM7SUFDRixDQUFDLE9BQU8sRUFBRTtZQUNSLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQztZQUNWLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQztTQUNkLENBQUM7SUFDRixDQUFDLFFBQVEsRUFBRTtZQUNULENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQztZQUNWLENBQUMsY0FBWSxDQUFDLEVBQUUsS0FBSyxDQUFDO1NBQ3ZCLENBQUM7SUFDRixDQUFDLE1BQU0sRUFBRTtZQUNQLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQztZQUNWLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQztTQUN2QixDQUFDO0lBQ0YsQ0FBQyxJQUFJLEVBQUU7WUFDTCxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUM7WUFDVixDQUFDLElBQUksSUFBSSxFQUFFLEVBQUUsS0FBSyxDQUFDO1NBQ3BCLENBQUM7Q0FDSCxDQUFDO0FBRUYsWUFBWSxDQUFDLE9BQU8sQ0FBQyxVQUFDLE9BQU87SUFDcEIsSUFBQSxxQkFBUSxFQUFFLGtCQUFLLENBQVk7SUFFbEMsUUFBUSxDQUFDLFlBQVUsUUFBUSxDQUFDLElBQU0sRUFBRTtRQUNsQyxHQUFHLENBQ0QsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQ3pDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDWCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIn0=