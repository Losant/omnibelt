const { map, apply } = require('ramda');
const { testHarnessUnary } = require('../../test/utils');
const isNot = require('./is-not');
const caseSections = [
    [Object, [
            ['', true],
            [{}, false]
        ]],
    [Array, [
            ['', true],
            [[], false]
        ]],
    [String, [
            [null, true],
            ['', false]
        ]],
    [Number, [
            ['', true],
            [1, false]
        ]],
    [Boolean, [
            ['', true],
            [true, false]
        ]],
    [Function, [
            ['', true],
            [function () { }, false]
        ]],
    [Symbol, [
            ['', true],
            [Symbol('foo'), false]
        ]],
    [Date, [
            ['', true],
            [new Date(), false]
        ]]
];
caseSections.forEach((section) => {
    const [typeCtor, cases] = section;
    describe(`is not ${typeCtor.name}`, () => {
        map(apply(testHarnessUnary(isNot(typeCtor))))(cases);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtbm90LnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvb21uaWJlbHQvaXMtbm90LnRlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7QUFFeEMsTUFBTSxFQUFFLGdCQUFnQixFQUFFLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFDekQsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBRWxDLE1BQU0sWUFBWSxHQUFHO0lBQ25CLENBQUMsTUFBTSxFQUFFO1lBQ1AsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDO1lBQ1YsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDO1NBQ1osQ0FBQztJQUNGLENBQUMsS0FBSyxFQUFFO1lBQ04sQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDO1lBQ1YsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDO1NBQ1osQ0FBQztJQUNGLENBQUMsTUFBTSxFQUFFO1lBQ1AsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDO1lBQ1osQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDO1NBQ1osQ0FBQztJQUNGLENBQUMsTUFBTSxFQUFFO1lBQ1AsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDO1lBQ1YsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDO1NBQ1gsQ0FBQztJQUNGLENBQUMsT0FBTyxFQUFFO1lBQ1IsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDO1lBQ1YsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDO1NBQ2QsQ0FBQztJQUNGLENBQUMsUUFBUSxFQUFFO1lBQ1QsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDO1lBQ1YsQ0FBQyxjQUFZLENBQUMsRUFBRSxLQUFLLENBQUM7U0FDdkIsQ0FBQztJQUNGLENBQUMsTUFBTSxFQUFFO1lBQ1AsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDO1lBQ1YsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsS0FBSyxDQUFDO1NBQ3ZCLENBQUM7SUFDRixDQUFDLElBQUksRUFBRTtZQUNMLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQztZQUNWLENBQUMsSUFBSSxJQUFJLEVBQUUsRUFBRSxLQUFLLENBQUM7U0FDcEIsQ0FBQztDQUNILENBQUM7QUFFRixZQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7SUFDL0IsTUFBTSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsR0FBRyxPQUFPLENBQUM7SUFFbEMsUUFBUSxDQUFDLFVBQVUsUUFBUSxDQUFDLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRTtRQUN2QyxHQUFHLENBQ0QsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQ3pDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDWCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIn0=