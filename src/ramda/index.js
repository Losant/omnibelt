const r = require('ramda');

/**
 * @module ramda
 */

module.exports.F = r.F;
module.exports.T = r.T;
module.exports.__ = r.__;
module.exports.add = r.add;
module.exports.addIndex = r.addIndex;
module.exports.addIndexRight = r.addIndexRight;
module.exports.adjust = r.adjust;
module.exports.all = r.all;
module.exports.allPass = r.allPass;
module.exports.always = r.always;
module.exports.and = r.and;
module.exports.any = r.any;
module.exports.anyPass = r.anyPass;
module.exports.ap = r.ap;
module.exports.aperture = r.aperture;
module.exports.append = r.append;
module.exports.apply = r.apply;
module.exports.applySpec = r.applySpec;
module.exports.applyTo = r.applyTo;
module.exports.ascend = r.ascend;
module.exports.assoc = r.assoc;
module.exports.assocPath = r.assocPath;
module.exports.binary = r.binary;
module.exports.bind = r.bind;
module.exports.both = r.both;
module.exports.call = r.call;
module.exports.chain = r.chain;
module.exports.clamp = r.clamp;
module.exports.clone = r.clone;
module.exports.collectBy = r.collectBy;
module.exports.comparator = r.comparator;
module.exports.complement = r.complement;
module.exports.compose = r.compose;
module.exports.composeWith = r.composeWith;
module.exports.concat = r.concat;
module.exports.cond = r.cond;
module.exports.construct = r.construct;
module.exports.constructN = r.constructN;
module.exports.converge = r.converge;
module.exports.countBy = r.countBy;
module.exports.curry = r.curry;
module.exports.curryN = r.curryN;
module.exports.dec = r.dec;
module.exports.defaultTo = r.defaultTo;
module.exports.descend = r.descend;
module.exports.difference = r.difference;
module.exports.differenceWith = r.differenceWith;
module.exports.dissoc = r.dissoc;
module.exports.dissocPath = r.dissocPath;
module.exports.divide = r.divide;
module.exports.drop = r.drop;
module.exports.dropLast = r.dropLast;
module.exports.dropLastWhile = r.dropLastWhile;
module.exports.dropRepeats = r.dropRepeats;
module.exports.dropRepeatsBy = r.dropRepeatsBy;
module.exports.dropRepeatsWith = r.dropRepeatsWith;
module.exports.dropWhile = r.dropWhile;
module.exports.either = r.either;
module.exports.empty = r.empty;
module.exports.endsWith = r.endsWith;
module.exports.eqBy = r.eqBy;
module.exports.eqProps = r.eqProps;
module.exports.equals = r.equals;
module.exports.evolve = r.evolve;
module.exports.filter = r.filter;
module.exports.find = r.find;
module.exports.findIndex = r.findIndex;
module.exports.findLast = r.findLast;
module.exports.findLastIndex = r.findLastIndex;
module.exports.flatten = r.flatten;
module.exports.forEachObjIndexed = r.forEachObjIndexed;
module.exports.fromPairs = r.fromPairs;
module.exports.groupBy = r.groupBy;
module.exports.groupWith = r.groupWith;
module.exports.gt = r.gt;
module.exports.gte = r.gte;
module.exports.has = r.has;
module.exports.hasIn = r.hasIn;
module.exports.hasPath = r.hasPath;
module.exports.head = r.head;
module.exports.identical = r.identical;
module.exports.identity = r.identity;
module.exports.ifElse = r.ifElse;
module.exports.inc = r.inc;
module.exports.includes = r.includes;
module.exports.indexOf = r.indexOf;
module.exports.init = r.init;
module.exports.innerJoin = r.innerJoin;
module.exports.insert = r.insert;
module.exports.insertAll = r.insertAll;
module.exports.intersection = r.intersection;
module.exports.intersperse = r.intersperse;
module.exports.into = r.into;
module.exports.invert = r.invert;
module.exports.invertObj = r.invertObj;
module.exports.invoker = r.invoker;
module.exports.is = r.is;
module.exports.isEmpty = r.isEmpty;
module.exports.isNil = r.isNil;
module.exports.join = r.join;
module.exports.juxt = r.juxt;
module.exports.keys = r.keys;
module.exports.keysIn = r.keysIn;
module.exports.last = r.last;
module.exports.lastIndexOf = r.lastIndexOf;
module.exports.length = r.length;
module.exports.lens = r.lens;
module.exports.lensIndex = r.lensIndex;
module.exports.lensPath = r.lensPath;
module.exports.lensProp = r.lensProp;
module.exports.lift = r.lift;
module.exports.liftN = r.liftN;
module.exports.lt = r.lt;
module.exports.lte = r.lte;
module.exports.map = r.map;
module.exports.mapAccum = r.mapAccum;
module.exports.mapAccumRight = r.mapAccumRight;
module.exports.mapObjIndexed = r.mapObjIndexed;
module.exports.match = r.match;
module.exports.mathMod = r.mathMod;
module.exports.max = r.max;
module.exports.maxBy = r.maxBy;
module.exports.mean = r.mean;
module.exports.median = r.median;
module.exports.memoizeWith = r.memoizeWith;
module.exports.mergeAll = r.mergeAll;
module.exports.mergeDeepLeft = r.mergeDeepLeft;
module.exports.mergeDeepRight = r.mergeDeepRight;
module.exports.mergeDeepWith = r.mergeDeepWith;
module.exports.mergeDeepWithKey = r.mergeDeepWithKey;
module.exports.mergeLeft = r.mergeLeft;
module.exports.mergeRight = r.mergeRight;
module.exports.mergeWith = r.mergeWith;
module.exports.mergeWithKey = r.mergeWithKey;
module.exports.min = r.min;
module.exports.minBy = r.minBy;
module.exports.modify = r.modify;
module.exports.modifyPath = r.modifyPath;
module.exports.modulo = r.modulo;
module.exports.move = r.move;
module.exports.multiply = r.multiply;
module.exports.nAry = r.nAry;
module.exports.partialObject = r.partialObject;
module.exports.negate = r.negate;
module.exports.none = r.none;
module.exports.not = r.not;
module.exports.nth = r.nth;
module.exports.nthArg = r.nthArg;
module.exports.o = r.o;
module.exports.objOf = r.objOf;
module.exports.of = r.of;
module.exports.omit = r.omit;
module.exports.on = r.on;
module.exports.once = r.once;
module.exports.or = r.or;
module.exports.otherwise = r.otherwise;
module.exports.over = r.over;
module.exports.pair = r.pair;
module.exports.partial = r.partial;
module.exports.partialRight = r.partialRight;
module.exports.partition = r.partition;
module.exports.path = r.path;
module.exports.paths = r.paths;
module.exports.pathEq = r.pathEq;
module.exports.pathOr = r.pathOr;
module.exports.pathSatisfies = r.pathSatisfies;
module.exports.pick = r.pick;
module.exports.pickAll = r.pickAll;
module.exports.pickBy = r.pickBy;
module.exports.pipe = r.pipe;
module.exports.pipeWith = r.pipeWith;
module.exports.pluck = r.pluck;
module.exports.prepend = r.prepend;
module.exports.product = r.product;
module.exports.project = r.project;
module.exports.promap = r.promap;
module.exports.prop = r.prop;
module.exports.propEq = r.propEq;
module.exports.propIs = r.propIs;
module.exports.propOr = r.propOr;
module.exports.propSatisfies = r.propSatisfies;
module.exports.props = r.props;
module.exports.range = r.range;
module.exports.reduce = r.reduce;
module.exports.reduceBy = r.reduceBy;
module.exports.reduceRight = r.reduceRight;
module.exports.reduceWhile = r.reduceWhile;
module.exports.reduced = r.reduced;
module.exports.reject = r.reject;
module.exports.remove = r.remove;
module.exports.repeat = r.repeat;
module.exports.replace = r.replace;
module.exports.reverse = r.reverse;
module.exports.scan = r.scan;
module.exports.sequence = r.sequence;
module.exports.set = r.set;
module.exports.slice = r.slice;
module.exports.sort = r.sort;
module.exports.sortBy = r.sortBy;
module.exports.sortWith = r.sortWith;
module.exports.splitAt = r.splitAt;
module.exports.splitEvery = r.splitEvery;
module.exports.splitWhen = r.splitWhen;
module.exports.splitWhenever = r.splitWhenever;
module.exports.startsWith = r.startsWith;
module.exports.subtract = r.subtract;
module.exports.sum = r.sum;
module.exports.swap = r.swap;
module.exports.symmetricDifference = r.symmetricDifference;
module.exports.symmetricDifferenceWith = r.symmetricDifferenceWith;
module.exports.tail = r.tail;
module.exports.take = r.take;
module.exports.takeLast = r.takeLast;
module.exports.takeLastWhile = r.takeLastWhile;
module.exports.takeWhile = r.takeWhile;
module.exports.test = r.test;
module.exports.andThen = r.andThen;
module.exports.times = r.times;
module.exports.toPairs = r.toPairs;
module.exports.toPairsIn = r.toPairsIn;
module.exports.transduce = r.transduce;
module.exports.transpose = r.transpose;
module.exports.traverse = r.traverse;
module.exports.tryCatch = r.tryCatch;
module.exports.type = r.type;
module.exports.unapply = r.unapply;
module.exports.unary = r.unary;
module.exports.uncurryN = r.uncurryN;
module.exports.unfold = r.unfold;
module.exports.union = r.union;
module.exports.unionWith = r.unionWith;
module.exports.uniq = r.uniq;
module.exports.uniqBy = r.uniqBy;
module.exports.uniqWith = r.uniqWith;
module.exports.unless = r.unless;
module.exports.unnest = r.unnest;
module.exports.until = r.until;
module.exports.unwind = r.unwind;
module.exports.update = r.update;
module.exports.useWith = r.useWith;
module.exports.values = r.values;
module.exports.valuesIn = r.valuesIn;
module.exports.view = r.view;
module.exports.when = r.when;
module.exports.where = r.where;
module.exports.whereAny = r.whereAny;
module.exports.whereEq = r.whereEq;
module.exports.without = r.without;
module.exports.xor = r.xor;
module.exports.xprod = r.xprod;
module.exports.zip = r.zip;
module.exports.zipObj = r.zipObj;
module.exports.zipWith = r.zipWith;
module.exports.thunkify = r.thunkify;
